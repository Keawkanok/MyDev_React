{"version":3,"sources":["components/SplashScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Toggle","styled","button","props","theme","titleColor","pageBackground","Page","div","Container","Title","h1","TagLine","span","tagLineColor","Splash","icon","size","onClick","setTheme","href","themes","light","dark","App","useState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAKMA,EAASC,IAAOC,OAAV,gQAMY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,kBAO5BC,EAAON,IAAOO,IAAV,2LAMY,SAAAL,GAAK,OAAIA,EAAMC,MAAME,kBAIrCG,EAAYR,IAAOO,IAAV,uGAMTE,EAAQT,IAAOU,GAAV,4EACE,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,cAI5BO,EAAUX,IAAOY,KAAV,kGACA,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,gBA8BnBC,MAzBf,SAAgBZ,GASZ,IAAMa,EAAuB,UAAhBb,EAAMC,MAAoB,cAAC,IAAD,CAAQa,KAAM,KAAS,cAAC,IAAD,CAAOA,KAAM,KAE3E,OACI,cAACV,EAAD,UACI,eAACE,EAAD,WACI,cAACT,EAAD,CAAQkB,QAbpB,WACwB,UAAhBf,EAAMC,MACND,EAAMgB,SAAS,QAEfhB,EAAMgB,SAAS,UASX,SACKH,IAEL,cAACN,EAAD,uCACA,cAACE,EAAD,qCACA,cAACF,EAAD,UAAO,mBAAGU,KAAK,2CAAR,4BChDjBC,G,MAAS,CACbC,MAbiB,CACjBhB,eAAgB,QAChBD,WAAY,UACZS,aAAc,SAWdS,KARgB,CAChBjB,eAAgB,UAChBD,WAAY,YACZS,aAAc,cAiDDU,MAzCf,WAAgB,IAAD,EAEaC,mBAAS,SAFtB,mBAENrB,EAFM,KAECe,EAFD,KAIX,OACE,qBAAKO,UAAU,MAAf,SAGI,8BACE,cAAC,IAAD,CAAetB,MAAOiB,EAAOjB,GAA7B,SACE,cAAC,EAAD,CAAQA,MAAOA,EAAOe,SAAUA,WCpB/BQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6d8487c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { CgSun } from \"react-icons/cg\";\r\nimport { HiMoon } from \"react-icons/hi\";\r\nimport ParticlesBg from \"particles-bg\";\r\n\r\nconst Toggle = styled.button`\r\n    cursor: pointer;\r\n    height: 50px;\r\n    width: 50px;   \r\n    border-radius: 50%;\r\n    border: none;\r\n    background-color: ${props => props.theme.titleColor};\r\n    color: ${props => props.theme.pageBackground};\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    transition: all .5s ease;\r\n`;\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: ${props => props.theme.pageBackground};\r\n  transition: all .5s ease;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: ${props => props.theme.titleColor};\r\n    transition: all .5s ease;\r\n`;\r\n\r\nconst TagLine = styled.span`\r\n    color: ${props => props.theme.tagLineColor};\r\n    font-size: 18px;\r\n    transition: all .5s ease;\r\n`;\r\n\r\nfunction Splash(props) {\r\n    function changeTheme() {\r\n        if (props.theme === \"light\") {\r\n            props.setTheme(\"dark\");\r\n        } else {\r\n            props.setTheme(\"light\");\r\n        }\r\n    };\r\n\r\n    const icon = props.theme === \"light\" ? <HiMoon size={40} /> : <CgSun size={40} />;\r\n\r\n    return (\r\n        <Page>\r\n            <Container>\r\n                <Toggle onClick={changeTheme}>\r\n                    {icon}\r\n                </Toggle>\r\n                <Title>Dark mode and Light mode</Title>\r\n                <TagLine>Mr.Thanyakon Keawkanok</TagLine>\r\n                <Title><a href=\"https://github.com/Keawkanok/MyDev_React\">Github</a></Title>\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Splash;","import React, { useState } from \"react\";\nimport Splash from \"./components/SplashScreen\";\nimport { ThemeProvider } from \"styled-components\";\nimport ParticlesBg from \"particles-bg\";\nimport \"./App.css\";\nconst LightTheme = {\n  pageBackground: \"white\",\n  titleColor: \"#dc658b\",\n  tagLineColor: \"black\",\n};\n\nconst DarkTheme = {\n  pageBackground: \"#282c36\",\n  titleColor: \"lightpink\",\n  tagLineColor: \"lavender\",\n};\n\nconst themes = {\n  light: LightTheme,\n  dark: DarkTheme,\n};\n\nfunction App() {\n  \n  const [theme, setTheme] = useState(\"light\");\n \n    return (\n      <div className=\"App\">\n     \n             {/* <ParticlesBg type=\"random\" bg={true} /> */}\n          <div>\n            <ThemeProvider theme={themes[theme]}>\n              <Splash theme={theme} setTheme={setTheme} />\n            </ThemeProvider>\n        \n          </div>\n        </div>\n    );\n}\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}